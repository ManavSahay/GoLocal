package com.pentagon.golocal.service;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

import com.pentagon.golocal.entity.User;
import com.pentagon.golocal.repository.UserRepository;

public class CustomUserDetailsService implements UserDetailsService {
	@Autowired UserRepository userRepository;

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		User user = userRepository.findByUsername(username).orElseThrow(() -> new UsernameNotFoundException("User not found"));
		
		return new org.springframework.security.core.userdetails.User(
					user.getUsername(),
					user.getPassword(),
					getAuthority(user)
				);
	}
	
	private Collection<? extends GrantedAuthority> getAuthority(User user) {
		GrantedAuthority authority = new SimpleGrantedAuthority(user.getRole().name());
		return authority;
	}

}
